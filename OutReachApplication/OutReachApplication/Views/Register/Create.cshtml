@model OutReachApplication.Models.Volunteer

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_CommonLayout.cshtml";
}

<style>
    .heading-agileinfo {
        font-weight: 600;
        letter-spacing: .5px;
        font-size: 40px;
        margin-bottom: 1.9em;
        text-align: center;
        color: #ff9900;
        text-transform: uppercase;
        position: relative;
        margin-top: 0;
        background: #000;
    }

    .required::after {
        content: "*";
        font-weight: bold;
        color: red;
    }

    
</style>
<div class="w3ls-banner">
    <div class="heading">
        <h1>Volunteer Registration</h1>
    </div>
    <div class="container_1">
        <div class="agile-form">

            @using (Html.BeginForm("Create", "Register", FormMethod.Post, new { @id = "registerFormId", @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                HtmlHelper.UnobtrusiveJavaScriptEnabled = true;//Validation
                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2 datepicker required" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-10 row-md-10">
                           
                           @Html.DropDownListFor(model => model.Gender, new List<SelectListItem> { new SelectListItem { Text = "Male", Value = "male" }, new SelectListItem { Text = "Female", Value = "Female" }, new SelectListItem { Text = "Others", Value = "Others" } }, "Select Gender", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.VolunteerId, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.VolunteerId, new { htmlAttributes = new { @class = "form-control", @Value = @TempData["volid"], @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.VolunteerId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.VolunteerPassword, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.VolunteerPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VolunteerPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2 required" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Register" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        $(document).ready(function () {
            $('.datepicker').datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

        });
    </script>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">

        window.onload = function () {
                alert("@ViewBag.Message");
                window.location.href = "/Login/Login";
            };
        </script>
    }
    <script src="~/Scripts/script-custom-validator.js"></script>



}
